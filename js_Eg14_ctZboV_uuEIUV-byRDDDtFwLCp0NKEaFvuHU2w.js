/* Source and licensing information for the line(s) below can be found at http://www.vie-publique.fr/themes/custom/vp_dsfr/js/orejime-video.js. */
(function ($, Drupal, drupalSettings) {
  'use strict';
  Drupal.behaviors.orejime_video = {
    attach: function (context, settings) {
      $(document, context).once('DisableVideoCookies').ready(function ($) {
        if('tracking_4' in orejime.internals.manager.consents && orejime.internals.manager.consents.tracking_4 ){

          return;
        }


          $("iframe[src*='youtube.com']",context).each(function() {
            var $container = $(this,context).parent();
            if ($(".video-overlay").length > 0) {
                $(".video-overlay .msg-head").html(drupalSettings.orejime.orejime_video_title);
                $(".video-overlay .msg-body").html(drupalSettings.orejime.orejime_video_caption);
                $(".video-overlay .btn-primary").html(drupalSettings.orejime.orejime_video_button);
            } else{
              $container.append("<div class='video-embed-in-ckeditor-video'></div>");
              $container.children('.video-embed-in-ckeditor-video').append($(this,context).clone());
              $container.append("<div class=\"video-overlay\" style=\"display: none;\">\n" +
                "              <div class=\"msg-acceptation\">\n" +
                "                <p class=\"msg-head\">" + drupalSettings.orejime.orejime_video_title + "</p>\n" +
                "                <p class=\"msg-body\">" + drupalSettings.orejime.orejime_video_caption + "</p>\n" +
                "                <p class=\"acceptation-link\">\n" +
                "                  <a href=\"#\" class=\"btn btn-primary\" role=\"button\" data-test=\"accept-video-cookie\">" + drupalSettings.orejime.orejime_video_button + "</a>\n" +
                "                </p>\n" +
                "              </div>\n" +
                "            </div>");
              $(this).remove();
            }
          });

          $('div.video-overlay').show();
          $('.video-embed-field-responsive-video').hide();
          $('.video-embed-in-ckeditor-video').hide();

        $("p.acceptation-link a", context).each(function () {
          $(this).on("click", function (e) {
            e.preventDefault();
            var app = orejime.internals.manager.getApp('tracking_4');
            var a = orejime.internals.manager.updateConsent(app, true)
            orejime.internals.manager.saveAndApplyConsents();
            $('div.video-overlay').hide();
            $('.video-embed-field-responsive-video').show();
            $('.video-embed-in-ckeditor-video').show();
          });
        });

      });
    }
  };
})(jQuery, Drupal, drupalSettings);

/* Source and licensing information for the above line(s) can be found at http://www.vie-publique.fr/themes/custom/vp_dsfr/js/orejime-video.js. */;
/* Source and licensing information for the line(s) below can be found at http://www.vie-publique.fr/core/misc/debounce.js. */
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
Drupal.debounce = function (func, wait, immediate) {
  var timeout;
  var result;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var context = this;
    var later = function later() {
      timeout = null;
      if (!immediate) {
        result = func.apply(context, args);
      }
    };
    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
    if (callNow) {
      result = func.apply(context, args);
    }
    return result;
  };
};
/* Source and licensing information for the above line(s) can be found at http://www.vie-publique.fr/core/misc/debounce.js. */;
/* Source and licensing information for the line(s) below can be found at http://www.vie-publique.fr/core/misc/form.js. */
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
(function ($, Drupal, debounce) {
  $.fn.drupalGetSummary = function () {
    var callback = this.data('summaryCallback');
    return this[0] && callback ? callback(this[0]).trim() : '';
  };
  $.fn.drupalSetSummary = function (callback) {
    var self = this;
    if (typeof callback !== 'function') {
      var val = callback;
      callback = function callback() {
        return val;
      };
    }
    return this.data('summaryCallback', callback).off('formUpdated.summary').on('formUpdated.summary', function () {
      self.trigger('summaryUpdated');
    }).trigger('summaryUpdated');
  };
  Drupal.behaviors.formSingleSubmit = {
    attach: function attach() {
      function onFormSubmit(e) {
        var $form = $(e.currentTarget);
        var formValues = $form.serialize();
        var previousValues = $form.attr('data-drupal-form-submit-last');
        if (previousValues === formValues) {
          e.preventDefault();
        } else {
          $form.attr('data-drupal-form-submit-last', formValues);
        }
      }
      $(once('form-single-submit', 'body')).on('submit.singleSubmit', 'form:not([method~="GET"])', onFormSubmit);
    }
  };
  function triggerFormUpdated(element) {
    $(element).trigger('formUpdated');
  }
  function fieldsList(form) {
    return [].map.call(form.querySelectorAll('[name][id]'), function (el) {
      return el.id;
    });
  }
  Drupal.behaviors.formUpdated = {
    attach: function attach(context) {
      var $context = $(context);
      var contextIsForm = $context.is('form');
      var $forms = $(once('form-updated', contextIsForm ? $context : $context.find('form')));
      var formFields;
      if ($forms.length) {
        $.makeArray($forms).forEach(function (form) {
          var events = 'change.formUpdated input.formUpdated ';
          var eventHandler = debounce(function (event) {
            triggerFormUpdated(event.target);
          }, 300);
          formFields = fieldsList(form).join(',');
          form.setAttribute('data-drupal-form-fields', formFields);
          $(form).on(events, eventHandler);
        });
      }
      if (contextIsForm) {
        formFields = fieldsList(context).join(',');
        var currentFields = $(context).attr('data-drupal-form-fields');
        if (formFields !== currentFields) {
          triggerFormUpdated(context);
        }
      }
    },
    detach: function detach(context, settings, trigger) {
      var $context = $(context);
      var contextIsForm = $context.is('form');
      if (trigger === 'unload') {
        once.remove('form-updated', contextIsForm ? $context : $context.find('form')).forEach(function (form) {
          form.removeAttribute('data-drupal-form-fields');
          $(form).off('.formUpdated');
        });
      }
    }
  };
  Drupal.behaviors.fillUserInfoFromBrowser = {
    attach: function attach(context, settings) {
      var userInfo = ['name', 'mail', 'homepage'];
      var $forms = $(once('user-info-from-browser', '[data-user-info-from-browser]'));
      if ($forms.length) {
        userInfo.forEach(function (info) {
          var $element = $forms.find("[name=".concat(info, "]"));
          var browserData = localStorage.getItem("Drupal.visitor.".concat(info));
          if (!$element.length) {
            return;
          }
          var emptyValue = $element[0].value === '';
          var defaultValue = $element.attr('data-drupal-default-value') === $element[0].value;
          if (browserData && (emptyValue || defaultValue)) {
            $element.each(function (index, item) {
              item.value = browserData;
            });
          }
        });
      }
      $forms.on('submit', function () {
        userInfo.forEach(function (info) {
          var $element = $forms.find("[name=".concat(info, "]"));
          if ($element.length) {
            localStorage.setItem("Drupal.visitor.".concat(info), $element[0].value);
          }
        });
      });
    }
  };
  var handleFragmentLinkClickOrHashChange = function handleFragmentLinkClickOrHashChange(e) {
    var url;
    if (e.type === 'click') {
      url = e.currentTarget.location ? e.currentTarget.location : e.currentTarget;
    } else {
      url = window.location;
    }
    var hash = url.hash.substr(1);
    if (hash) {
      var $target = $("#".concat(hash));
      $('body').trigger('formFragmentLinkClickOrHashChange', [$target]);
      setTimeout(function () {
        return $target.trigger('focus');
      }, 300);
    }
  };
  var debouncedHandleFragmentLinkClickOrHashChange = debounce(handleFragmentLinkClickOrHashChange, 300, true);
  $(window).on('hashchange.form-fragment', debouncedHandleFragmentLinkClickOrHashChange);
  $(document).on('click.form-fragment', 'a[href*="#"]', debouncedHandleFragmentLinkClickOrHashChange);
})(jQuery, Drupal, Drupal.debounce);
/* Source and licensing information for the above line(s) can be found at http://www.vie-publique.fr/core/misc/form.js. */;
/* Source and licensing information for the line(s) below can be found at http://www.vie-publique.fr/modules/contrib/views_autocomplete_filters/js/views-autocomplete-filters.js. */
/**
 * @file
 * Expands the behaviour of the default autocompletion.
 */

(function ($, Drupal) {

  // Override the "select" option of the jQueryUI autocomplete
  // to make sure we do not use quotes for inputs with comma.
  Drupal.autocomplete.options.select = function (event, ui) {
    var terms = Drupal.autocomplete.splitValues(event.target.value);
    // Remove the current input.
    terms.pop();
    // Add the selected item.
    terms.push(ui.item.value);
    event.target.value = terms.join(', ');
    // Return false to tell jQuery UI that we've filled in the value already.
    return false;
  };

})(jQuery, Drupal);

/* Source and licensing information for the above line(s) can be found at http://www.vie-publique.fr/modules/contrib/views_autocomplete_filters/js/views-autocomplete-filters.js. */;
/* Source and licensing information for the line(s) below can be found at http://www.vie-publique.fr/modules/custom/ldf_statistics/js/ldf_statistics.js. */
(function ($, Drupal, drupalSettings) {
  Drupal.behaviors.initStatsForm =  {
    attach: function (context, settings) {
      $(document, context).once('initStatsForm ').each( function() {
        InitStatisticsForm();
      });
    }
  };

  function InitStatisticsForm() {
    $('#edit-all-all').click(function() {
        $('#statistics-settings input:checkbox').not(this).prop('checked', this.checked);
    });
    $('#statSelectAll').click(function() {
      if($(this).hasClass('is-active')) {
        $(this).removeClass('is-active');
        $('#statistics-settings input:checkbox').prop('checked', '');
      } else {
        $(this).addClass('is-active');
        $('#statistics-settings input:checkbox').prop('checked', 'checked');
      }


    });
    $("#reset_all").click(function(e) {
      $('#statSelectAll').removeClass('is-active');
      $('input:checkbox').not(this).prop('checked', false);
      if ($("#edit-choix-date")[0].options.length < 3) {
        $("#edit-choix-date").prepend("<option value='' selected='selected'>- Selectionner -</option>");
      }
      $("#edit-choix-date")[0].options[0].selected = true;
      $("#edit-date-debut").val("");
      $("#edit-date-fin").val("");
      // Reset the url.
      if(history.pushState) {
        history.pushState(null, null, '/');
      }


      return false;
    });
  }
} (jQuery, Drupal, drupalSettings));

/* Source and licensing information for the above line(s) can be found at http://www.vie-publique.fr/modules/custom/ldf_statistics/js/ldf_statistics.js. */;
